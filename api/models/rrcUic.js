'use strict';
const {
  Model
} = require('sequelize');
module.exports = (sequelize, DataTypes) => {
  class rrc_uic extends Model {
    /**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */
    static associate(models) {
      // define association here
    }
  };
  rrc_uic.init({
    uic_cntl_no: DataTypes.INTEGER,
    uic_next_available: DataTypes.STRING,
    uic_oper: DataTypes.STRING,
    uic_api_number: DataTypes.INTEGER,
    uic_field_no: DataTypes.INTEGER,
    uic_class: DataTypes.INTEGER,
    uic_appr_date: DataTypes.DATE,
    uic_w14_date: DataTypes.DATE,
    uic_h1_date: DataTypes.DATE,
    uic_letter_date: DataTypes.DATE,
    uic_permit_added_date: DataTypes.DATE,
    uic_activated_flag: DataTypes.STRING,
    uic_cancel_date: DataTypes.DATE,
    uic_w2_g1_date: DataTypes.DATE,
    uic_w3_date: DataTypes.DATE,
    uic_type_inj: DataTypes.INTEGER,
    uic_type_inj_cmt: DataTypes.STRING,
    uic_type_flu_cmt: DataTypes.STRING,
    uic_bbl_vol_inj: DataTypes.INTEGER,
    uic_mcf_vol_inj: DataTypes.INTEGER,
    uic_top_inj_zone: DataTypes.INTEGER,
    uic_bot_inj_zone: DataTypes.INTEGER,
    uic_max_inj_pressure: DataTypes.INTEGER,
    uic_h1_no: DataTypes.INTEGER,
    uic_w14_no: DataTypes.INTEGER,
    uic_inj_sw: DataTypes.STRING,
    uic_inj_fw: DataTypes.STRING,
    uic_inj_frac_water: DataTypes.STRING,
    uic_inj_norm: DataTypes.STRING,
    uic_inj_co2: DataTypes.STRING,
    uic_inj_gas: DataTypes.STRING,
    uic_inj_h2s: DataTypes.STRING,
    uic_inj_polymer: DataTypes.STRING,
    uic_inj_steam: DataTypes.STRING,
    uic_inj_air: DataTypes.STRING,
    uic_inj_nitrogen: DataTypes.STRING,
    uic_inj_other: DataTypes.STRING,
    uic_inj_bw: DataTypes.STRING,
    uic_inj_lpg: DataTypes.STRING,
    uic_max_inj_pressure_2: DataTypes.INTEGER,
    uic_spec_ann_press_test: DataTypes.STRING,
    uic_spec_ann_rad_tracer_sur: DataTypes.STRING,
    uic_spec_ann_temp_survey: DataTypes.STRING,
    uic_spec_downhole_survey: DataTypes.STRING,
    uic_spec_semi_annual_pt: DataTypes.STRING,
    uic_spec_tbg_csg_annulus: DataTypes.STRING,
    uic_spec_tbg_csg_freq: DataTypes.STRING,
    uic_spec_montr_press: DataTypes.STRING,
    uic_spec_montr_press_code_1: DataTypes.STRING,
    uic_spec_montr_press_code_2: DataTypes.STRING,
    uic_spec_montr_press_freq: DataTypes.STRING,
    uic_spec_meas_fluid_level: DataTypes.STRING,
    uic_spec_meas_fluid_freq: DataTypes.STRING,
    uic_spec_commercial: DataTypes.STRING,
    uic_spec_cement_sqz: DataTypes.STRING,
    uic_spec_cement_sqz_amt1: DataTypes.INTEGER,
    uic_spec_cement_sqz_amt2: DataTypes.INTEGER,
    uic_spec_cement_sqz_2: DataTypes.STRING,
    uic_spec_cement_sqz_2_amt1: DataTypes.INTEGER,
    uic_spec_cement_sqz_2_amt2: DataTypes.INTEGER,
    uic_spec_block_sqz_sx: DataTypes.STRING,
    uic_spec_block_sqz_sx_amt1: DataTypes.INTEGER,
    uic_spec_block_sqz_sx_amt2: DataTypes.INTEGER,
    uic_spec_block_sqz: DataTypes.STRING,
    uic_spec_block_sqz_amt: DataTypes.INTEGER,
    uic_spec_sqz_perf: DataTypes.STRING,
    uic_spec_sqz_perf_dpth: DataTypes.INTEGER,
    uic_spec_bridge_plug: DataTypes.STRING,
    uic_spec_bridge_plug_dpth: DataTypes.INTEGER,
    uic_spec_fluid_source_limit: DataTypes.STRING,
    uic_spec_plug_area_wells: DataTypes.STRING,
    uic_spec_plug_area_wells_no: DataTypes.INTEGER,
    uic_spec_permit_exp: DataTypes.STRING,
    uic_exceptions: DataTypes.STRING,
    uic_dpth_bot_of_top_zone: DataTypes.INTEGER,
    uic_dpth_top_of_split_zone: DataTypes.INTEGER,
    uic_dpth_bot_of_split_zone: DataTypes.INTEGER,
    uic_location: DataTypes.STRING,
    uic_survey_lines: DataTypes.STRING,
    uic_status: DataTypes.STRING,
    uic_geothermal: DataTypes.STRING,
    uic_mismatch: DataTypes.STRING,
    uic_depth_boz: DataTypes.INTEGER,
    uic_depth_pkr: DataTypes.INTEGER,
    uic_inj_mode: DataTypes.STRING,
    uic_technician_review_date: DataTypes.DATE,
    uic_technician_initials: DataTypes.STRING,
    uic_technician_results: DataTypes.STRING,
    uic_prod_casing_amt: DataTypes.INTEGER,
    uic_prod_casing_fraction_1: DataTypes.INTEGER,
    uic_prod_casing_fraction_2: DataTypes.INTEGER,
    uic_prod_casing_depth: DataTypes.INTEGER,
    uic_prod_casing_cement: DataTypes.INTEGER,
    uic_prod_casing_top_cement: DataTypes.STRING,
    uic_prod_casing_pkr_depth: DataTypes.INTEGER,
    uic_gas_plant_comment: DataTypes.STRING,
    uic_special_cond_cmt: DataTypes.STRING,
    uic_file_review_date: DataTypes.DATE,
    uic_file_review_init: DataTypes.STRING,
    uic_docket_no_dist: DataTypes.STRING,
    uic_docket_no_filler: DataTypes.STRING,
    uic_docket_no_uic_old_docket_no: DataTypes.INTEGER,
    uic_uiroot_filler: DataTypes.STRING
  }, {
    sequelize,
    modelName: 'rrc_uic',
    freezeTableName: true,
    timestamps: false
  });
  return rrc_uic;
};
